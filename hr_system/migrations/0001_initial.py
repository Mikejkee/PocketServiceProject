# Generated by Django 4.1.3 on 2022-12-12 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('area_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название района')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Область')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OnlinePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=20, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер телефона')),
                ('username', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя пользователя')),
                ('telegram_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='ID Телеграмм')),
                ('telegram_username', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя пользователя Телеграмм')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='person_images/background/', verbose_name='Аватар пользователя ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('role_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Роль')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hr_system.person')),
                ('whom_created', models.CharField(blank=True, max_length=20, null=True, verbose_name='Создатель')),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
            ],
            options={
                'abstract': False,
            },
            bases=('hr_system.person',),
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hr_system.person')),
                ('agent_description', models.TextField(blank=True, null=True, verbose_name='Описание агента')),
                ('education_description', models.TextField(blank=True, null=True, verbose_name='Образование')),
                ('work_experience', models.TextField(blank=True, null=True, verbose_name='Опыт работы')),
                ('command_work', models.BooleanField(blank=True, null=True, verbose_name='Работа в команде')),
                ('passport_check', models.BooleanField(blank=True, null=True, verbose_name='Проверка паспорта')),
                ('contract_work', models.BooleanField(blank=True, null=True, verbose_name='Работа по договору')),
                ('guarantee_period', models.TextField(blank=True, null=True, verbose_name='Гарантийный период')),
                ('services_prices', models.TextField(blank=True, null=True, verbose_name='Услуги и цены')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='area_agents', to='hr_system.area', verbose_name='Район')),
            ],
            options={
                'abstract': False,
            },
            bases=('hr_system.person',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hr_system.person')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес проживания')),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('object_information', models.TextField(blank=True, null=True, verbose_name='Информация об объекте проживания')),
            ],
            options={
                'abstract': False,
            },
            bases=('hr_system.person',),
        ),
        migrations.AddField(
            model_name='person',
            name='role',
            field=models.ManyToManyField(blank=True, related_name='roles', to='hr_system.role', verbose_name='Роли'),
        ),
        migrations.CreateModel(
            name='ImageObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('person_image', models.ImageField(blank=True, null=True, upload_to='person_images/', verbose_name='Картинка пользователя')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_image', to='hr_system.person', verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('object_type', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('person_file', models.FileField(blank=True, null=True, upload_to='person_files/', verbose_name='Файл пользователя')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_files', to='hr_system.person', verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('product_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Ремонт сантехники'), (1, 'Ремонт мебели'), (2, 'Уборка')], null=True, verbose_name='Тип услуги')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='product_images/', verbose_name='Картинка услуг')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_products', to='hr_system.agent', verbose_name='Агент')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('result_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок конца работы')),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_orders', to='hr_system.product', verbose_name='Продукт')),
                ('administrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_orders', to='hr_system.administrator', verbose_name='Администратор')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_orders', to='hr_system.agent', verbose_name='Агент')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_orders', to='hr_system.client', verbose_name='Клиент')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
